{
  "name": "Lifter",
  "tagline": "Simple popup library with no dependancies",
  "body": "# Lifter\r\nSimple but flexible popup library with no dependencies  \r\n\r\n\r\n## Demo\r\n\r\n\r\n\r\n\r\n## Implementation\r\n**CSS**\r\n```html\r\n<link rel=\"stylesheet\" href=\"/lifter/dist/lifter.min.css\" />\r\n```  \r\n**JavaScript**\r\n```html\r\n<script src=\"/lifter/dist/lifter.min.js\"></script>\r\n```\r\n\r\n\r\n\r\n## Usage\r\n\r\n**Basic**\r\n```html\r\n<a href=\"//domain.com/page.html\" target=\"_popup\">Pop this up</a>\r\n```\r\n\r\n```javascript\r\nvar lifter = new Lifter();\r\n```\r\n\r\n\r\n**Inline Content**\r\n```html\r\n<div id=\"popup-content\" style=\"display:none;\">\r\n\t<form action=\"/submit\" method=\"POST\">\r\n    \t<input type=\"email\" name=\"email\" placeholder=\"Email address\" /><br />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" /><br />\r\n        <button type=\"submit\">Log In</button>\r\n    </form>\r\n</div>\r\n\r\n<a target=\"_popup\" data-content=\"#popup-content\">Log In</a>\r\n```\r\n```javascript\r\nvar lifter = new Lifter({\r\n\tpreload : ':not([data-content])'\r\n});\r\n```\r\n\r\n\r\n## Options\r\n```javascript\r\nvar lifter = new Lifter({\r\n\ttriggers : '.popup',\r\n\tpreload : true\r\n});\r\n```\r\n\r\n\r\n| Option | Type   | Default | Description |\r\n|--------|--------|---------|-------------|\r\n| **triggers** | string | `'[target=_popup]'` | Selector for the triggers that open popups. |\r\n| **preload** | boolean or string | `true` | Whether to load the popup content in hidden `<iframes>`. If a string selector is given then only triggers that match the selector will be preloaded. |\r\n\r\n\r\n\r\n## Popup Sizing\r\n\r\nThe default size of the popup is 50% of the total width and height of the base element.\r\nThis can be changed per popup in a two different ways.\r\n\r\n**Setting popup size with classes**\r\n\r\nTo use a small or large variant of the popup you can add a class to the trigger.\r\n| Size | Class | Effect |\r\n|------|-------|--------|\r\n| small | `lifter-sm` | width and height set to `30%` |\r\n| large | `lifter-lg` | width and height set to `80%` |\r\n\r\n```html\r\n<a href=\"//domain.com/page.html\" target=\"_popup\" class=\"lifter-lg\">Pop this up huge</a>\r\n```\r\n\r\n\r\n**Setting popup size with data attributes**\r\n\r\nTo have more control over the size of your popup you can use one of these data attributes:\r\n\r\n`data-width` `data-height` `data-size`\r\n\r\n\r\nYou can use any CSS size unit (`px`, `%`, `em`, `vw` ...) in the value of the attribute.\r\n\r\n| Dimension | Attribute | Value Format | Example |\r\n|-----------|-----------|--------|---------|\r\n| width | `data-width` | `{width}{unit}` | `data-width=\"500px\"` |\r\n| height | `data-height` | `{height}{unit}` | `data-height=\"40vh\"` |\r\n| width and height | `data-size` | `{width}{unit}|{height}{unit}` | `data-size=\"75%|450px\"` |\r\n\r\n_Note:_ `data-size` will overwrite `data-width` or `data-height` if both are set on a trigger element.\r\n\r\n\r\n\r\n## Methods\r\n\r\nUnder normal use you should not need these methods but here they are just in case you are doing something fancy:\r\n\r\n\r\n#### lift()\r\n\r\nOpens a popup.\r\n\r\n`lift(options)`\r\n\r\n\r\n| Parameter | Required | Type | Description |\r\n|-----------|----------|------|-------------|\r\n| `options` | yes | `object` | Object containing configuration options for the popup. |\r\n| `options.target` | no | `string` | Selector that points to a popup that has been preloaded. |\r\n| `options.html` | no | `string` | Markup that will be shown in the popup if using inline content. |\r\n| `options.src` | no | `string` | URL to load in the popup. |\r\n| `options.classes` | no | `array` | List of classes that will be added to the popup |\r\n| `option.styles` | no | `object` | Key/values that represent styles and their values to be applied to the popup. Styles can be written as standard CSS styles (with hyphens) or as camel case. |\r\n|  |   |   |   |\r\n| `return` | - | `element` or `boolean` | If `target`, `html` and `src` are all `null` then `false` will be returned and no popup will be shown, otherwise, the popup element will be returned |\r\n\r\n**Example**\r\n```javascript\r\nvar lifter = new Lifter();\r\n\r\nlifter.lift({\r\n\tsrc : '//domain.com/page.html',\r\n    classes : [ 'lifter-sm', 'another-class'],\r\n    styles : { max-width : 100%; max-height: 100%; }\r\n});\r\n```\r\n\r\n\r\n#### lower()\r\n`lower()`\r\n\r\nCloses the open popup.\r\n\r\n\r\n## Styling\r\n\r\nHere are the selectors to use in your CSS if you want to customize the look of popups and the overlay behind it:\r\n\r\n#### Overlay:\r\n| Selector | State |\r\n|----------|:-----:|\r\n| `.lifter-base::after` | - |\r\n| `.lifter-base.lifting::after` | popup active |\r\n\r\n**Example**\r\n```css\r\n.lifter-base::after {\r\n\tbackground-color: #fff;\r\n}\r\n```\r\n\r\n#### Popup:\r\n| Selector | State |\r\n|----------|:-----:|\r\n| `.lifter` | - |\r\n| `.lifter.lifting` | popup active |\r\n\r\n**Example**\r\n```css\r\n.lifter {\r\n\tborder-radius: 10000px;\r\n}\r\n.lifter.lifted {\r\n\tborder-radius: 0;\r\n}\r\n```\r\n\r\n_Note:_ `.lifter` transitions all applicable differences in styling between the `.lifter` and `lifter.lifted` selectors by default but this can be overridden if desired through CSS. ( `transition: opacity 150ms ease;` )\r\n\r\n\r\n## To Do\r\n\r\n- [ ] make an example page/site\r\n- [ ] write tests\r\n- [ ] add more pre-set animation styles\r\n- [ ] make docs prettier\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}